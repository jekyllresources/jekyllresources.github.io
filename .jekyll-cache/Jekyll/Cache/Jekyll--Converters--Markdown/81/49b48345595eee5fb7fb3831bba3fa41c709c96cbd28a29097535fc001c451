I"	/<p>Building, testing, and deploying your Jekyll-generated website can quickly be done with <a href="https://circleci.com/">CircleCI</a>, a continuous integration &amp; delivery tool. CircleCI supports <a href="https://github.com/">GitHub</a> and <a href="https://bitbucket.org/">Bitbucket</a>, and you can get started for free using an open-source or private repository.</p>

<h2 id="1-follow-your-project-on-circleci">1. Follow Your Project on CircleCI</h2>

<p>To start building your project on CircleCI, all you need to do is ‘follow’ your project from CircleCI’s website:</p>

<ol>
  <li>Visit the ‘Add Projects’ page</li>
  <li>From the GitHub or Bitbucket tab on the left, choose a user or organization.</li>
  <li>Find your project in the list and click ‘Build project’ on the right.</li>
  <li>The first build will start on its own. You can start telling CircleCI how to build your project by creating a <a href="https://circleci.com/docs/configuration/">circle.yml</a> file in the root of your repository.</li>
</ol>

<h2 id="2-dependencies">2. Dependencies</h2>

<p>The easiest way to manage dependencies for a Jekyll project (with or without CircleCI) is via a <a href="http://bundler.io/gemfile.html">Gemfile</a>. You’d want to have Jekyll, any Jekyll plugins, <a href="#html-proofer">HTML Proofer</a>, and any other gems that you are using in the <code class="language-plaintext highlighter-rouge">Gemfile</code>. Don’t forget to version <code class="language-plaintext highlighter-rouge">Gemfile.lock</code> as well. Here’s an example <code class="language-plaintext highlighter-rouge">Gemfile</code>:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">source</span> <span class="s1">'https://rubygems.org'</span>

<span class="n">ruby</span> <span class="s1">'2.4.0'</span>

<span class="n">gem</span> <span class="s1">'jekyll'</span>
<span class="n">gem</span> <span class="s1">'html-proofer'</span>
</code></pre></div></div>

<p>CircleCI detects when <code class="language-plaintext highlighter-rouge">Gemfile</code> is present and will automatically run <code class="language-plaintext highlighter-rouge">bundle install</code> for you in the <code class="language-plaintext highlighter-rouge">dependencies</code> phase.</p>

<h2 id="3-testing">3. Testing</h2>

<p>The most basic test that can be run is seeing if <code class="language-plaintext highlighter-rouge">jekyll build</code> actually works. This is a blocker, a dependency if you will, for other tests you might run on the generate site. So we’ll run Jekyll, via Bundler, in the <code class="language-plaintext highlighter-rouge">dependencies</code> phase.</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">dependencies</span><span class="pi">:</span>
  <span class="na">post</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="s">bundle exec jekyll build</span>
</code></pre></div></div>

<h3 id="html-proofer">HTML Proofer</h3>

<p>With your site built, it’s useful to run tests to check for valid HTML, broken links, etc. There’s a few tools out there but <a href="https://github.com/gjtorikian/html-proofer">HTML Proofer</a> is popular amongst Jekyll users. We’ll run it in the <code class="language-plaintext highlighter-rouge">test</code> phase with a few preferred flags. Check out the <code class="language-plaintext highlighter-rouge">html-proofer</code> <a href="https://github.com/gjtorikian/html-proofer/blob/master/README.md#configuration">README</a> for all available flags, or run <code class="language-plaintext highlighter-rouge">htmlproofer --help</code> locally.</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">test</span><span class="pi">:</span>
  <span class="na">post</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="s">bundle exec htmlproofer ./_site --check-html --disable-external</span>
</code></pre></div></div>

<h2 id="complete-example-circleyml-file">Complete Example circle.yml File</h2>

<h3 id="circleci-v1">CircleCI v1</h3>

<p>When you put it all together, here’s an example of what that <code class="language-plaintext highlighter-rouge">circle.yml</code> file could look like in v1:</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">machine</span><span class="pi">:</span>
  <span class="na">environment</span><span class="pi">:</span>
    <span class="na">NOKOGIRI_USE_SYSTEM_LIBRARIES</span><span class="pi">:</span> <span class="no">true</span> <span class="c1"># speeds up installation of html-proofer</span>

<span class="na">dependencies</span><span class="pi">:</span>
  <span class="na">post</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="s">bundle exec jekyll build</span>

<span class="na">test</span><span class="pi">:</span>
  <span class="na">post</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="s">bundle exec htmlproofer ./_site --allow-hash-href --check-favicon --check-html --disable-external</span>

<span class="na">deployment</span><span class="pi">:</span>
  <span class="na">prod</span><span class="pi">:</span>
    <span class="na">branch</span><span class="pi">:</span> <span class="s">master</span>
    <span class="na">commands</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">rsync -va --delete ./_site username@my-website:/var/html</span>
</code></pre></div></div>

<h3 id="circleci-v2">CircleCI v2</h3>

<p>CircleCI v2 is a Docker-based system. The example <code class="language-plaintext highlighter-rouge">circle.yml</code> below demonstrates how to
deploy your Jekyll project to AWS. In order for this to work you would first have to set the
<code class="language-plaintext highlighter-rouge">S3_BUCKET_NAME</code> <a href="https://circleci.com/docs/2.0/env-vars/">environment variable</a>.</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">defaults</span><span class="pi">:</span> <span class="nl">&amp;defaults</span>
  <span class="na">working_directory</span><span class="pi">:</span> <span class="s">~/repo</span>
<span class="na">version</span><span class="pi">:</span> <span class="m">2</span>
<span class="na">jobs</span><span class="pi">:</span>
  <span class="na">build</span><span class="pi">:</span>
    <span class="s">&lt;&lt;</span><span class="pi">:</span> <span class="nv">*defaults</span>
    <span class="na">docker</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">image</span><span class="pi">:</span> <span class="s">circleci/ruby:2.5</span>
    <span class="na">environment</span><span class="pi">:</span>
      <span class="na">BUNDLE_PATH</span><span class="pi">:</span> <span class="s">~/repo/vendor/bundle</span>
    <span class="na">steps</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">checkout</span>
      <span class="pi">-</span> <span class="na">restore_cache</span><span class="pi">:</span>
          <span class="na">keys</span><span class="pi">:</span>
            <span class="pi">-</span> <span class="s">rubygems-v1-{{ checksum "Gemfile.lock" }}</span>
            <span class="pi">-</span> <span class="s">rubygems-v1-fallback</span>
      <span class="pi">-</span> <span class="na">run</span><span class="pi">:</span>
          <span class="na">name</span><span class="pi">:</span> <span class="s">Bundle Install</span>
          <span class="na">command</span><span class="pi">:</span> <span class="s">bundle check || bundle install</span>
      <span class="pi">-</span> <span class="na">save_cache</span><span class="pi">:</span>
          <span class="na">key</span><span class="pi">:</span> <span class="s">rubygems-v1-{{ checksum "Gemfile.lock" }}</span>
          <span class="na">paths</span><span class="pi">:</span>
            <span class="pi">-</span> <span class="s">vendor/bundle</span>
      <span class="pi">-</span> <span class="na">run</span><span class="pi">:</span>
          <span class="na">name</span><span class="pi">:</span> <span class="s">Jekyll build</span>
          <span class="na">command</span><span class="pi">:</span> <span class="s">bundle exec jekyll build</span>
      <span class="pi">-</span> <span class="na">run</span><span class="pi">:</span>
          <span class="na">name</span><span class="pi">:</span> <span class="s">HTMLProofer tests</span>
          <span class="na">command</span><span class="pi">:</span> <span class="pi">|</span>
            <span class="s">bundle exec htmlproofer ./_site \</span>
              <span class="s">--allow-hash-href \</span>
              <span class="s">--check-favicon  \</span>
              <span class="s">--check-html \</span>
              <span class="s">--disable-external</span>
      <span class="pi">-</span> <span class="na">persist_to_workspace</span><span class="pi">:</span>
          <span class="na">root</span><span class="pi">:</span> <span class="s">./</span>
          <span class="na">paths</span><span class="pi">:</span>
            <span class="pi">-</span> <span class="s">_site</span>
  <span class="na">deploy</span><span class="pi">:</span>
    <span class="s">&lt;&lt;</span><span class="pi">:</span> <span class="nv">*defaults</span>
    <span class="na">docker</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">image</span><span class="pi">:</span> <span class="s">circleci/python:3.6.3</span>
    <span class="na">environment</span><span class="pi">:</span>
      <span class="na">S3_BUCKET_NAME</span><span class="pi">:</span> <span class="s">&lt;&lt;YOUR BUCKET NAME HERE&gt;&gt;</span>
    <span class="na">steps</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">attach_workspace</span><span class="pi">:</span>
          <span class="na">at</span><span class="pi">:</span> <span class="s">./</span>
      <span class="pi">-</span> <span class="na">run</span><span class="pi">:</span>
          <span class="na">name</span><span class="pi">:</span> <span class="s">Install AWS CLI</span>
          <span class="na">command</span><span class="pi">:</span> <span class="s">pip install awscli --upgrade --user</span>
      <span class="pi">-</span> <span class="na">run</span><span class="pi">:</span>
          <span class="na">name</span><span class="pi">:</span> <span class="s">Upload to s3</span>
          <span class="na">command</span><span class="pi">:</span> <span class="s">~/.local/bin/aws s3 sync ./_site s3://$S3_BUCKET_NAME/ --delete --acl public-read</span>
<span class="na">workflows</span><span class="pi">:</span>
  <span class="na">version</span><span class="pi">:</span> <span class="m">2</span>
  <span class="na">test-deploy</span><span class="pi">:</span>
    <span class="na">jobs</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">build</span>
      <span class="pi">-</span> <span class="na">deploy</span><span class="pi">:</span>
          <span class="na">requires</span><span class="pi">:</span>
            <span class="pi">-</span> <span class="s">build</span>
          <span class="na">filters</span><span class="pi">:</span>
            <span class="na">branches</span><span class="pi">:</span>
              <span class="na">only</span><span class="pi">:</span> <span class="s">master</span>
</code></pre></div></div>

<h2 id="questions">Questions?</h2>

<p>This entire guide is open-source. Go ahead and <a href="https://github.com/jekyll/jekyll/edit/master/docs/_docs/continuous-integration/circleci.md">edit it</a> if you have a fix or <a href="https://jekyllrb.com/help/">ask for help</a> if you run into trouble and need some help. CircleCI also has an <a href="https://discuss.circleci.com">online community</a> for help.</p>

:ET
I"À,<p>Upgrading from an older version of Jekyll? A few things have changed in Jekyll 3
that you‚Äôll want to know about.</p>

<p>Before we dive in, go ahead and fetch the latest version of Jekyll:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gem update jekyll
</code></pre></div></div>

<p class="note warning">Since version <span class="version-badge" title="This feature is available starting version 3.2">3.2</span>
, Jekyll requires Ruby version &gt;= 2.1.</p>

<div class="note feature">
  <h5>Diving in</h5>
  <p>Want to get a new Jekyll site up and running quickly? Simply
   run <code>jekyll new SITENAME</code> to create a new folder with a bare bones
   Jekyll site.</p>
</div>

<h3 id="sitecollections-has-changed">site.collections has changed</h3>

<p>In 2.x, your iterations over <code class="language-plaintext highlighter-rouge">site.collections</code> yielded an array with the collection
label and the collection object as the first and second items, respectively. In 3.x,
this complication has been removed and iterations now yield simply the collection object.
A simple conversion must be made in your templates:</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">collection[0]</code> becomes <code class="language-plaintext highlighter-rouge">collection.label</code></li>
  <li><code class="language-plaintext highlighter-rouge">collection[1]</code> becomes <code class="language-plaintext highlighter-rouge">collection</code></li>
</ul>

<p>When iterating over <code class="language-plaintext highlighter-rouge">site.collections</code>, ensure the above conversions are made.</p>

<p>For <code class="language-plaintext highlighter-rouge">site.collections.myCollection</code> in Jekyll 2, you now do:</p>

<div class="language-liquid highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{%</span><span class="w"> </span><span class="nt">assign</span><span class="w"> </span><span class="nv">myCollection</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nv">site</span><span class="p">.</span><span class="nv">collections</span><span class="w"> </span><span class="p">|</span><span class="w"> </span><span class="nf">where</span><span class="p">:</span><span class="w"> </span><span class="s2">"label"</span><span class="p">,</span><span class="w"> </span><span class="s2">"myCollection"</span><span class="w"> </span><span class="p">|</span><span class="w"> </span><span class="nf">first</span><span class="w"> </span><span class="p">%}</span>
</code></pre></div></div>

<p>This is a bit cumbersome at first, but is easier than a big <code class="language-plaintext highlighter-rouge">for</code> loop.</p>

<h3 id="textile-support">Textile support</h3>

<p>We dropped native support for Textile, from now on you have to install our  <a href="https://github.com/jekyll/jekyll-textile-converter">jekyll-textile-converter</a> plugin to work with Textile files.</p>

<h3 id="dropped-dependencies">Dropped dependencies</h3>

<p>We dropped a number of dependencies the Core Team felt were optional. As such, in 3.0, they must be explicitly installed and included if you use any of the features. They are:</p>

<ul>
  <li>jekyll-paginate ‚Äì Jekyll‚Äôs pagination solution from days past</li>
  <li>jekyll-coffeescript ‚Äì processing of CoffeeScript</li>
  <li>jekyll-gist ‚Äì the <code class="language-plaintext highlighter-rouge">gist</code> Liquid tag</li>
  <li>pygments.rb ‚Äì the Pygments highlighter</li>
  <li>redcarpet ‚Äì the Markdown processor</li>
  <li>toml ‚Äì an alternative to YAML for configuration files</li>
  <li>classifier-reborn ‚Äì for <code class="language-plaintext highlighter-rouge">site.related_posts</code></li>
</ul>

<h3 id="future-posts">Future posts</h3>

<p>A seeming feature regression in 2.x, the <code class="language-plaintext highlighter-rouge">--future</code> flag was automatically <em>enabled</em>.
The future flag allows post authors to give the post a date in the future and to have
it excluded from the build until the system time is equal or after the post time.
In Jekyll 3, this has been corrected. <strong>Now, <code class="language-plaintext highlighter-rouge">--future</code> is disabled by default.</strong>
This means you will need to include <code class="language-plaintext highlighter-rouge">--future</code> if you want your future-dated posts to
generate when running <code class="language-plaintext highlighter-rouge">jekyll build</code> or <code class="language-plaintext highlighter-rouge">jekyll serve</code>.</p>

<div class="note info">
  <h5>Future Posts on GitHub Pages</h5>
  <p>
    An exception to the above rule are GitHub Pages sites, where the <code>--future</code> flag remains <em>enabled</em>
    by default to maintain historical consistency for those sites.
  </p>
</div>

<h3 id="layout-metadata">Layout metadata</h3>

<p>Introducing: <code class="language-plaintext highlighter-rouge">layout</code>. In Jekyll 2 and below, any metadata in the layout was merged onto
the <code class="language-plaintext highlighter-rouge">page</code> variable in Liquid. This caused a lot of confusion in the way the data was
merged and some unexpected behaviour. In Jekyll 3, all layout data is accessible via <code class="language-plaintext highlighter-rouge">layout</code>
in Liquid. For example, if your layout has <code class="language-plaintext highlighter-rouge">class: my-layout</code> in its front matter,
then the layout can access that via <code class="language-plaintext highlighter-rouge">{{ layout.class }}</code>.</p>

<h3 id="syntax-highlighter-changed">Syntax highlighter changed</h3>

<p>For the first time, the default syntax highlighter has changed for the
<code class="language-plaintext highlighter-rouge">highlight</code> tag and for backtick code blocks. Instead of <a href="https://github.com/tmm1/pygments.rb">Pygments.rb</a>,
it‚Äôs now <a href="http://rouge.jneen.net/">Rouge</a>. If you were using the <code class="language-plaintext highlighter-rouge">highlight</code> tag with certain
options, such as <code class="language-plaintext highlighter-rouge">hl_lines</code>, they may not be available when using Rouge. To
go back to using Pygments, set <code class="language-plaintext highlighter-rouge">highlighter: pygments</code> in your
<code class="language-plaintext highlighter-rouge">_config.yml</code> file and run <code class="language-plaintext highlighter-rouge">gem install pygments.rb</code> or add
<code class="language-plaintext highlighter-rouge">gem 'pygments.rb'</code> to your project‚Äôs <code class="language-plaintext highlighter-rouge">Gemfile</code>.</p>

<h3 id="relative-permalink-support-removed">Relative Permalink support removed</h3>

<p>In Jekyll 3 and above, relative permalinks have been deprecated. If you
created your site using Jekyll 2 and below, you may receive the following
error when trying to <strong>serve</strong> or <strong>build</strong>:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Since v3.0, permalinks for pages in subfolders must be relative to the site
source directory, not the parent directory. Check
https://jekyllrb.com/docs/upgrading/ for more info.
</code></pre></div></div>

<p>This can be fixed by removing the following line from your <code class="language-plaintext highlighter-rouge">_config.yml</code> file:</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">relative_permalinks</span><span class="pi">:</span> <span class="no">true</span>
</code></pre></div></div>

<h3 id="permalinks-no-longer-automatically-add-a-trailing-slash">Permalinks no longer automatically add a trailing slash</h3>

<p>In Jekyll 2, any URL constructed from the <code class="language-plaintext highlighter-rouge">permalink:</code> field had a trailing slash (<code class="language-plaintext highlighter-rouge">/</code>) added to it automatically. Jekyll 3 no longer adds a trailing slash automatically to <code class="language-plaintext highlighter-rouge">permalink:</code> URLs. This can potentially result in old links to pages returning a 404 error. For example, suppose a page previously contained the YAML <code class="language-plaintext highlighter-rouge">permalink: /:year-:month-:day-:title</code> that resulted in the URL <code class="language-plaintext highlighter-rouge">example.com/2016-02-01-test/</code> (notice the trailing slash), Jekyll internally generates a folder named <code class="language-plaintext highlighter-rouge">2016-02-01-test</code>. In Jekyll 3, the same <code class="language-plaintext highlighter-rouge">permalink:</code> generate the file <code class="language-plaintext highlighter-rouge">2016-02-01-test.html</code> and the URL for the same page will be <code class="language-plaintext highlighter-rouge">example.com/2016-02-01-test</code>, and consequently any links to the old URL will result in a 404 error. In order to maintain the same URLs and avoid this problem, a trailing slash should be added to the <code class="language-plaintext highlighter-rouge">permalink:</code> field, for example <code class="language-plaintext highlighter-rouge">permalink: /:year-:month-:day-:title/</code>.</p>

<h3 id="all-my-posts-are-gone-whered-they-go">All my posts are gone! Where‚Äôd they go!</h3>

<p>Try adding <code class="language-plaintext highlighter-rouge">future: true</code> to your <code class="language-plaintext highlighter-rouge">_config.yml</code> file. Are they showing up now? If they are, then you were ensnared by an issue with the way Ruby parses times. Each of your posts is being read in a different timezone than you might expect and, when compared to the computer‚Äôs current time, is ‚Äúin the future.‚Äù The fix for this is to add <a href="https://en.wikipedia.org/wiki/List_of_UTC_time_offsets">a timezone offset</a> to each post (and make sure you remove <code class="language-plaintext highlighter-rouge">future: true</code> from your <code class="language-plaintext highlighter-rouge">_config.yml</code> file). If you‚Äôre writing from California, for example, you would change this:</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nn">---</span>
<span class="na">date</span><span class="pi">:</span> <span class="s">2016-02-06 19:32:10</span>
<span class="nn">---</span>
</code></pre></div></div>

<p>to this (note the offset):</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nn">---</span>
<span class="na">date</span><span class="pi">:</span> <span class="s">2016-02-06 19:32:10 -0800</span>
<span class="nn">---</span>
</code></pre></div></div>

<h3 id="my-categories-have-stopped-working">My categories have stopped working!</h3>

<p>If you organized your categories as <code class="language-plaintext highlighter-rouge">/_posts/code/2008-12-24-closures.md</code>, you will need to restructure your directories to put the categories <em>above</em> the <code class="language-plaintext highlighter-rouge">_posts</code> directories, as follows: <code class="language-plaintext highlighter-rouge">/code/_posts/2008-12-24-closures.md</code>.</p>

<p><em>Did we miss something? Please click ‚ÄúImprove this page‚Äù above and add a section. Thanks!</em></p>
:ET